#!/usr/bin/env node
/* 
 * (C) 2018 TekMonks. All rights reserved.
 * License: MIT - see enclosed LICENSE file.
 */

const args = require("commander");
const fs = require("fs");
const path = require("path");
const colors = require("colors");

global.CONSTANTS = require(`${__dirname}/lib/constants.js`);
global.CONF = require(`${CONSTANTS.ROOTDIR}/conf/xforge.json`);

const _printBuildTime = timeStarted => { if (args.time) CONSTANTS.LOGINFO(`Total build time: ${Date.now() - timeStarted} milliseconds`); }

main();
async function main() {
    args.description("XForge - (C) TekMonks\nJust like make, except if it was on steriods ;)")
    args.version("XForge v2.1.0");
    args.option("-f, --file <path>", "required, full path to the build file");
    args.option("-c, --colors", "produce colored output");
    args.option("-t, --time", "track build time");
    args.option("-i, --incremental <value>", "true for incremental and false to force a full build");
    args.option("-j, --javahome <java_home>", "java home directory");
    args.option("-o, --other <otherArgs>", "other arguments", (otherArgs, other) => {other.push(otherArgs); return other;}, []);
    args.parse(process.argv);

    if (args.colors) CONSTANTS.COLORED_OUT = true;

    if (args.other) CONSTANTS.OTHER_ARGS = args.other;

    _overrideConfig();  // override config

    if (args.file) {
        const fileToBuild = _resolvePath(args.file);

        const timeStarted = Date.now();
        CONSTANTS.LOGINFO(`Starting build: ${fileToBuild}`);
        try { await require(fileToBuild).make(); _printBuildTime(timeStarted); CONSTANTS.EXITOK(); } 
        catch (err) { _printBuildTime(timeStarted); CONSTANTS.HANDLE_BUILD_ERROR(err); }
    } else {args.outputHelp(t=>colors.red(t)); process.exit(1);}
}
 
function _resolvePath(file) {
    if (fs.existsSync(file)) return path.resolve(file);
    else return (path.resolve(`${__dirname}/${file}`));
}

function _overrideConfig() {
    if (args.incremental && args.incremental.toLowerCase() == "false") global.CONF.incremental_mode = false;
    if (args.incremental && args.incremental.toLowerCase() == "true") global.CONF.incremental_mode = true;

    if (args.javahome) global.CONF.java_home = args.javahome;
}